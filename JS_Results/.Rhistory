link <- paste0("https://favi.sk/produkty/kategorie/koberce?strana=", pageNumbers[i], "#product-list")
page <- read_html(link)
innerpage <- page %>% html_nodes("product-shop-link") %>% html_elements("a") %>% html_text()
print(innerpage)
final <- rbind(final, innerpage)
}
#get links for images from pages with pageNumbers
for(i in 1:length(pageNumbers)) {
link <- paste0("https://favi.sk/produkty/kategorie/koberce?strana=", pageNumbers[i], "#product-list")
page <- read_html(link)
innerpage <- page %>% html_nodes("product-shop-link") %>% html_elements("a") %>% html_attr("href") %>% html_text()
print(innerpage)
final <- rbind(final, innerpage)
}
#get links for images from pages with pageNumbers
for(i in 1:length(pageNumbers)) {
link <- paste0("https://favi.sk/produkty/kategorie/koberce?strana=", pageNumbers[i], "#product-list")
page <- read_html(link)
innerpage <- page %>% html_nodes("product-shop-link") %>% html_elements("a") %>% html_attrs("href") %>% html_text()
print(innerpage)
final <- rbind(final, innerpage)
}
help("rvest")
#get links for images from pages with pageNumbers
for(i in 1:length(pageNumbers)) {
link <- paste0("https://favi.sk/produkty/kategorie/koberce?strana=", pageNumbers[i], "#product-list")
page <- read_html(link)
innerpage <- page %>%  html_elements(".product-shop-link a") %>% html_attrs("href") %>% html_text()
print(innerpage)
final <- rbind(final, innerpage)
}
#get links for images from pages with pageNumbers
for(i in 1:length(pageNumbers)) {
link <- paste0("https://favi.sk/produkty/kategorie/koberce?strana=", pageNumbers[i], "#product-list")
page <- read_html(link)
innerpage <- page %>%  html_elements(".product-shop-link a") %>% html_text()
print(innerpage)
final <- rbind(final, innerpage)
}
#get links for images from pages with pageNumbers
for(i in 1:length(pageNumbers)) {
link <- paste0("https://favi.sk/produkty/kategorie/koberce?strana=", pageNumbers[i], "#product-list")
page <- read_html(link)
innerpage <- page %>%  html_elements(".product-shop-link a") %>% html_attr("href")
print(innerpage)
final <- rbind(final, innerpage)
}
#get links for images from pages with pageNumbers
for(i in 1:length(pageNumbers)) {
link <- paste0("https://favi.sk/produkty/kategorie/koberce?strana=", pageNumbers[i], "#product-list")
page <- read_html(link)
innerpage <- page %>%  html_elements(".product-shop-link a") %>% html_attr("href")
for(j in 1:length(innerpage)) {
innerlink <- paste0("https://favi.sk", innerpage[i])
innerlink
}
}
final
#get links for images from pages with pageNumbers
for(i in 1:length(pageNumbers)) {
link <- paste0("https://favi.sk/produkty/kategorie/koberce?strana=", pageNumbers[i], "#product-list")
page <- read_html(link)
innerpage <- page %>%  html_elements(".product-shop-link a") %>% html_attr("href")
for(j in 1:length(innerpage)) {
innerlink <- paste0("https://favi.sk", innerpage[i])
final <- rbind(final, innerlink)
}
}
final
#get links for images from pages with pageNumbers
for(i in 1:length(pageNumbers)) {
link <- paste0("https://favi.sk/produkty/kategorie/koberce?strana=", pageNumbers[i], "#product-list")
page <- read_html(link)
innerpage <- page %>%  html_elements(".product-shop-link a") %>% html_attr("href") %>% trimws(., which = c("both"), whitespace = "[ \t\r\n]")
for(j in 1:length(innerpage)) {
innerlink <- paste0("https://favi.sk", innerpage[i])
final <- rbind(final, innerlink)
}
}
final
#get links for images from pages with pageNumbers
for(i in 1:length(pageNumbers)) {
link <- paste0("https://favi.sk/produkty/kategorie/koberce?strana=", pageNumbers[i], "#product-list")
page <- read_html(link)
innerpage <- page %>%  html_elements(".product-shop-link a") %>% html_attr(nodes[1], "href") %>% trimws(., which = c("both"), whitespace = "[ \t\r\n]")
for(j in 1:length(innerpage)) {
innerlink <- paste0("https://favi.sk", innerpage[i])
final <- rbind(final, innerlink)
}
}
#get links for images from pages with pageNumbers
for(i in 1:length(pageNumbers)) {
link <- paste0("https://favi.sk/produkty/kategorie/koberce?strana=", pageNumbers[i], "#product-list")
page <- read_html(link)
innerpage <- page %>%  html_elements(".product-shop-link a") %>% html_attr(nodes[1], "href") %>% trimws(., which = c("both"), whitespace = "[ \t\r\n]")
for(j in 1:length(innerpage)) {
innerlink <- paste0("https://favi.sk", innerpage[i])
final <- rbind(final, innerlink)
}
}
help("html_attr")
#get links for images from pages with pageNumbers
for(i in 1:length(pageNumbers)) {
link <- paste0("https://favi.sk/produkty/kategorie/koberce?strana=", pageNumbers[i], "#product-list")
page <- read_html(link)
innerpage <- page %>%  html_elements(".product-shop-link a") %>% html_attr("href")[1] %>% trimws(., which = c("both"), whitespace = "[ \t\r\n]")
for(j in 1:length(innerpage)) {
innerlink <- paste0("https://favi.sk", innerpage[i])
final <- rbind(final, innerlink)
}
}
#get links for images from pages with pageNumbers
for(i in 1:length(pageNumbers)) {
link <- paste0("https://favi.sk/produkty/kategorie/koberce?strana=", pageNumbers[i], "#product-list")
page <- read_html(link)
innerpage <- page %>%  html_elements(".product-shop-link a") %>% html_attr("href") %>% trimws(., which = c("both"), whitespace = "[ \t\r\n]")
innerpage
for(j in 1:length(innerpage)) {
innerlink <- paste0("https://favi.sk", innerpage[i])
final <- rbind(final, innerlink)
}
}
innerpage
innerpage <- seq_len(nrow(innerpage)) %% 2
innerpage <- nrow(innerpage) %% 2
innerpage
#get links for images from pages with pageNumbers
for(i in 1:length(pageNumbers)) {
link <- paste0("https://favi.sk/produkty/kategorie/koberce?strana=", pageNumbers[i], "#product-list")
page <- read_html(link)
innerpage <- page %>%  html_elements(".product-shop-link a:nth-child(1)") %>% html_attr("href") %>% trimws(., which = c("both"), whitespace = "[ \t\r\n]")
for(j in 1:length(innerpage)) {
innerlink <- paste0("https://favi.sk", innerpage[i])
final <- rbind(final, innerlink)
}
}
final
trimws
#get links for images from pages with pageNumbers
for(i in 1:length(pageNumbers)) {
link <- paste0("https://favi.sk/produkty/kategorie/koberce?strana=", pageNumbers[i], "#product-list")
page <- read_html(link)
innerpage <- page %>%  html_elements(".product-shop-link a:nth-child(1)") %>% html_attr("href") %>% trimws(., whitespace = "[ \t\r\n]")
for(j in 1:length(innerpage)) {
innerlink <- paste0("https://favi.sk", innerpage[i])
final <- rbind(final, innerlink)
}
}
final
View(final)
View(final[4:lenght(final)])
View(final[4:length(final)])
str(final)
#create empty dataframe
final <- data.frame()
#get links for images from pages with pageNumbers
for(i in 1:length(pageNumbers)) {
link <- paste0("https://favi.sk/produkty/kategorie/koberce?strana=", pageNumbers[i], "#product-list")
page <- read_html(link)
innerpage <- page %>%  html_elements(".product-shop-link a:nth-child(1)") %>% html_attr("href") %>% trimws(., whitespace = "[ \t\r\n]")
for(j in 1:length(innerpage)) {
innerlink <- paste0("https://favi.sk", innerpage[i])
final <- rbind(final, innerlink)
}
}
final
#get links for images from pages with pageNumbers
for(i in 1:length(pageNumbers)) {
link <- paste0("https://favi.sk/produkty/kategorie/koberce?strana=", pageNumbers[i], "#product-list")
page <- read_html(link)
innerpage <- page %>%  html_elements(".product-shop-link a:nth-child(1)") %>% html_attr("href") %>% trimws(., whitespace = "[ \t\r\n]")
for(j in 1:length(innerpage)) {
innerlink <- paste0("https://favi.sk", innerpage[i])
page <- read_html(innerlink)
popis <- page %>% html_nodes(".product-item-inner") %>% html_element(".actual") %>% html_text()
#%>% str_trim()
#cena <- page %>% html_nodes(".product-item-inner") %>% html_element(".product-item-price") %>% html_text()
#akcia <- page %>% html_nodes(".product-item-inner") %>% html_element(".orig-price") %>% html_text()
final <- rbind(final, innerlink)
}
}
### necessary libs
library(rvest)
#get links for images from pages with pageNumbers
for(i in 1:length(pageNumbers)) {
link <- paste0("https://favi.sk/produkty/kategorie/koberce?strana=", pageNumbers[i], "#product-list")
page <- read_html(link)
innerpage <- page %>%  html_elements(".product-shop-link a:nth-child(1)") %>% html_attr("href") %>% trimws(., whitespace = "[ \t\r\n]")
for(j in 1:length(innerpage)) {
innerlink <- paste0("https://favi.sk", innerpage[i])
page <- read_html(innerlink)
popis <- page %>% html_nodes(".product-item-inner") %>% html_element(".actual") %>% html_text()
#%>% str_trim()
#cena <- page %>% html_nodes(".product-item-inner") %>% html_element(".product-item-price") %>% html_text()
#akcia <- page %>% html_nodes(".product-item-inner") %>% html_element(".orig-price") %>% html_text()
final <- rbind(final, innerlink)
}
}
#get links for images from pages with pageNumbers
for(i in 1:length(pageNumbers)) {
link <- paste0("https://favi.sk/produkty/kategorie/koberce?strana=", pageNumbers[i], "#product-list")
page <- read_html(link)
innerpage <- page %>%  html_elements(".product-shop-link a:nth-child(1)") %>% html_attr("href") %>% trimws(., whitespace = "[ \t\r\n]")
for(j in 1:length(innerpage)) {
innerlink <- paste0("https://favi.sk", innerpage[i])
page <- read_html(innerlink)
popis <- page %>% html_nodes(".product-item-inner") %>% html_element(".actual") %>% html_text()
#%>% str_trim()
#cena <- page %>% html_nodes(".product-item-inner") %>% html_element(".product-item-price") %>% html_text()
#akcia <- page %>% html_nodes(".product-item-inner") %>% html_element(".orig-price") %>% html_text()
subfinal <- data.frame(popis, stringsAsFactors = F)
final <- rbind(final, subfinal)
}
}
rm(list = ls())
#get links for images from pages with pageNumbers
for(i in 1:length(pageNumbers)) {
link <- paste0("https://favi.sk/produkty/kategorie/koberce?strana=", pageNumbers[i], "#product-list")
page <- read_html(link)
innerpage <- page %>%  html_elements(".product-shop-link a:nth-child(1)") %>% html_attr("href") %>% trimws(., whitespace = "[ \t\r\n]")
for(j in 1:length(innerpage)) {
innerlink <- paste0("https://favi.sk", innerpage[i])
page <- read_html(innerlink)
popis <- page %>% html_nodes(".product-item-inner") %>% html_element(".actual") %>% html_text()
#%>% str_trim()
#cena <- page %>% html_nodes(".product-item-inner") %>% html_element(".product-item-price") %>% html_text()
#akcia <- page %>% html_nodes(".product-item-inner") %>% html_element(".orig-price") %>% html_text()
subfinal <- data.frame(popis, stringsAsFactors = F)
final <- rbind(final, subfinal)
}
}
#pageNumbers <- c(1:pageNo)
pageNumbers <- c(1:3)
#create empty dataframe
final <- data.frame()
#get links for images from pages with pageNumbers
for(i in 1:length(pageNumbers)) {
link <- paste0("https://favi.sk/produkty/kategorie/koberce?strana=", pageNumbers[i], "#product-list")
page <- read_html(link)
innerpage <- page %>%  html_elements(".product-shop-link a:nth-child(1)") %>% html_attr("href") %>% trimws(., whitespace = "[ \t\r\n]")
for(j in 1:length(innerpage)) {
innerlink <- paste0("https://favi.sk", innerpage[i])
page <- read_html(innerlink)
popis <- page %>% html_nodes(".product-item-inner") %>% html_element(".actual") %>% html_text()
#%>% str_trim()
#cena <- page %>% html_nodes(".product-item-inner") %>% html_element(".product-item-price") %>% html_text()
#akcia <- page %>% html_nodes(".product-item-inner") %>% html_element(".orig-price") %>% html_text()
subfinal <- data.frame(popis, stringsAsFactors = F)
final <- rbind(final, subfinal)
}
}
final
p <- read_html("https://favi.sk/produkty/p/koberec-lazur-c940m-tmavo-sivy-tyrkysovy-80x150-cm?v=4825473")
p <- read_html("https://favi.sk/produkty/p/koberec-lazur-c940m-tmavo-sivy-tyrkysovy-80x150-cm?v=4825473")
popis <- page %>% html_nodes(".product-item-inner") %>% html_element(".actual") %>% html_text()
popis
popis <- page %>% html_nodes(".price-wrapper") %>% html_element(".actual") %>% html_text()
popis
popis <- page %>% html_nodes(".price-wrapper") %>% html_element(".actual") %>% html_text() %>%
gsub("\n", "", .) %>% gsub("\t", "", .) %>% gsub("€.*", "", .)%>%
substr(., 1, nchar(.)-1) %>% gsub(",", ".", .) %>% as.numeric()
popis
tab <- page %>% html_element(".table .table-striped .bottom10") %>% html_table()
tab <- page %>% html_nodes(".table .table-striped .bottom10") %>% html_table()
popis
p <- read_html("https://favi.sk/produkty/p/koberec-lazur-c940m-tmavo-sivy-tyrkysovy-80x150-cm?v=4825473")
tab <- page %>% html_nodes(".table .table-striped .bottom10") %>% html_table()
popis
popis <- page %>% html_nodes(".price-wrapper") %>% html_element(".actual") %>% html_text() %>%
gsub("\n", "", .) %>% gsub("\t", "", .) %>% gsub("€.*", "", .)%>%
substr(., 1, nchar(.)-1) %>% gsub(",", ".", .) %>% as.numeric()
popis
tab
str(tab)
# kniznice
library(BSgenome.Hsapiens.UCSC.hg38)
library(sigminer)
library(tidyverse)
library(magrittr)
library(pheatmap)
library(kableExtra)
m <- read_maf("signatury/EGA/subory/maf/CRUK0018_BS_GL.maf")
mt_tally <- sig_tally(
m,
ref_genome = "BSgenome.Hsapiens.UCSC.hg38",
use_syn = TRUE,
cores = 16
)
# loop na vytvorenie maf file
mtf <- data.frame()
mtf <- rbind(mtf, mt_tally$nmf_matrix)
mt_tally$nmf_matrix <- mtf
# refitting signatur na celej vzorke
# signatures <- sig_fit(t(mm[1:37, ]), sig_index = 1:30, return_class = "data.table", rel_threshold = 0.05)
signatures <- sig_fit(t(mt_tally$nmf_matrix), sig_index = 1:30, return_class = "data.table", rel_threshold = 0.05)
signatures %>% kable() %>% kable_styling(bootstrap_options = "striped")
colnames(signatures)
signatures$sample[1]
signatures$sample[1] <- c("CRUK0018_BS_GL.maf")
signatures %>% kable() %>% kable_styling(bootstrap_options = "striped")
# vytiahne iba nenulove stlpce
selected_sigs <- signatures %>% select_if(~ !is.numeric(.) || sum(.) != 0); selected_sigs
# urobi finalnu tabulku aj s totalom na riadkoch a zoradi podla SBS1
selected_sigs %>% mutate(TOTAL = COSMIC_1 + COSMIC_5 + COSMIC_12 + COSMIC_20) %>%
filter(str_detect(.$sample, "CRUK0037_*")) %>%
arrange(desc(COSMIC_1)) %>% kable() %>%
kable_styling(bootstrap_options = "striped")
# vytiahne iba nenulove stlpce
selected_sigs <- signatures %>% select_if(~ !is.numeric(.) || sum(.) != 0); selected_sigs
# urobi finalnu tabulku aj s totalom na riadkoch a zoradi podla SBS1
selected_sigs %>% mutate(TOTAL = COSMIC_1 + COSMIC_5 + COSMIC_12 + COSMIC_20) %>%
filter(str_detect(.$sample, "CRUK00*")) %>%
arrange(desc(COSMIC_1)) %>% kable() %>%
kable_styling(bootstrap_options = "striped")
View(maf)
View(mtf)
View(m)
m@data
vcfs[!grepl(paste0("idx", collapse = "|"), vcfs)]
vcfs
vcfs <- list.files(".", "*.vcf", full.names = FALSE)
vcfs
# nastavenie adresara odkial sa budu tahat subory do maf file
setwd("~/signatury/EGA/batch2/selected/")
vcfs <- list.files(".", "*.vcf", full.names = FALSE)
install.packages(
"imager"
)
install.packages("imager")
library(imager)
View(mt_tally)
mt_tally[["nmf_matrix"]]
View(signatures)
rm(list = ls())
# kniznice
library(BSgenome.Hsapiens.UCSC.hg38)
library(sigminer)
library(tidyverse)
library(magrittr)
library(pheatmap)
library(kableExtra)
library(gridExtra)
#  m <- read_vcf(vcfs[i], keep_only_pass = FALSE, genome_build = c("hg38")) # opraveny referencny genom
m <- read_vcf("~/signatury/EGA/subory/test/CRUK0100_BS_GL_selected_filtered.vcf", keep_only_pass = FALSE, genome_build = c("hg38")) # opraveny referencny genom
# m <- read_maf("signatury/EGA/subory/maf/CRUK0018_BS_GL.maf")  ## toto bude fungovat,ak to budeme robit s maf subormi
# loop na vytvorenie maf file
mtf <- data.frame()
#  m <- read_vcf(vcfs[i], keep_only_pass = FALSE, genome_build = c("hg38")) # opraveny referencny genom
m <- read_vcf("~/signatury/EGA/subory/test/CRUK0100_BS_GL_selected_filtered.vcf", keep_only_pass = FALSE, genome_build = c("hg38")) # opraveny referencny genom
#  m <- read_vcf(vcfs[i], keep_only_pass = FALSE, genome_build = c("hg38")) # opraveny referencny genom
m <- read_vcf("~/signatury/EGA/subory/test/filtered_control.vcf", keep_only_pass = FALSE, genome_build = c("hg38")) # opraveny referencny genom
mt_tally <- sig_tally(
m,
ref_genome = "BSgenome.Hsapiens.UCSC.hg38",
use_syn = TRUE,
cores = 16
)
mtf <- rbind(mtf, mt_tally$nmf_matrix)
a
mt_tally$nmf_matrix <- mtf
# refitting signatur na celej vzorke
# signatures <- sig_fit(t(mm[1:37, ]), sig_index = 1:30, return_class = "data.table", rel_threshold = 0.05)
signatures <- sig_fit(t(mt_tally$nmf_matrix), sig_index = 1:30, return_class = "data.table", rel_threshold = 0.05)
signatures %>% kable() %>% kable_styling(bootstrap_options = "striped")
# vytiahne iba nenulove stlpce
selected_sigs <- signatures %>% select_if(~ !is.numeric(.) || sum(.) != 0); selected_sigs
cruk0100 <- selected_sigs %>% mutate(TOTAL = COSMIC_1 + COSMIC_3 + COSMIC_5 + COSMIC_12 + COSMIC_20) %>%
filter(str_detect(.$sample, "CRUK0100_*")) %>%
arrange(desc(COSMIC_1))
cruk0100 <- selected_sigs %>% mutate(TOTAL = COSMIC_1 + COSMIC_5 + COSMIC_12 + COSMIC_20) %>%
filter(str_detect(.$sample, "CRUK0100_*")) %>%
arrange(desc(COSMIC_1))
# vytiahne iba nenulove stlpce
selected_sigs <- signatures %>% select_if(~ !is.numeric(.) || sum(.) != 0); selected_sigs
cruk0100 <- selected_sigs %>% mutate(TOTAL = COSMIC_1 + COSMIC_12 + COSMIC_20) %>%
filter(str_detect(.$sample, "CRUK0100_*")) %>%
arrange(desc(COSMIC_1))
cruk100
cruk0100
cruk0100 <- selected_sigs %>% mutate(TOTAL = COSMIC_1 + COSMIC_12 + COSMIC_20) %>%
arrange(desc(COSMIC_1))
cruk0100
finalfina
finalfinal
### necessary libs
library(rvest)
library(tidyverse)
library(stringr)
library(RMariaDB)
library(magrittr)
# odcita poslednu stranku v paginacii, aby ju vlozilo do loopu
page <- read_html("https://favi.sk/produkty/kategorie/koberce")
pageNo <- page %>% html_nodes(".pagination") %>% html_element(".last") %>% html_element("a") %>%
html_attr("href") %>% sub("#.*", '', .) %>% sub(".*=", '',.)
#pageNumbers <- c(1:pageNo)
pageNumbers <- c(1:2)
#create empty dataframe
final <- data.frame()
finalfinal <- data.frame()
cn <- c("Výrobca","Dizajnový štýl","Kvalita","Vzor","Spôsob výroby","Umiestnenie","Vlastnosť","Priemer",
"Miestnosť","Váha","Typ zakončenia","Typ vlasu","Výška vlasu","Tvar",
"Hrúbka","Farba","Krajina pôvodu","Cena")
#get links for images from pages with pageNumbers
for(i in 1:length(pageNumbers)) {
link <- paste0("https://favi.sk/produkty/kategorie/koberce?strana=", pageNumbers[i], "#product-list")
page <- read_html(link)
innerpage <- page %>%  html_elements(".product-shop-link a:nth-child(1)") %>% html_attr("href") %>% trimws(., whitespace = "[ \t\r\n]")
for(j in 1:length(innerpage)) {
innerlink <- paste0("https://favi.sk", innerpage[j])
p <- read_html(innerlink)
cena <- p %>% html_nodes(".price-wrapper") %>% html_element(".actual") %>% html_text() %>%
gsub("\n", "", .) %>% gsub("\t", "", .) %>% gsub("€.*", "", .)%>%
substr(., 1, nchar(.)-1) %>% gsub(",", ".", .) %>% as.numeric()
tabulka <- p %>% html_nodes(".table") %>% html_table() %>% as.data.frame()
f <- c(tabulka$X2, cena)
print(f)
final <- rbind(final, f)
#%>% str_trim()
#cena <- page %>% html_nodes(".product-item-inner") %>% html_element(".product-item-price") %>% html_text()
#akcia <- page %>% html_nodes(".product-item-inner") %>% html_element(".orig-price") %>% html_text()
#    subfinal <- data.frame(popis, stringsAsFactors = F)
#final <- rbind(final, subfinal)
}
finalfinal <- rbind(finalfinal, final)
}
str(finalfinal)
str(cn)
cn <- c("Farba", "Výška vlasu", "Material", "Umiestnenie", "Vlastnosti", "Vzor", "Kolekcia", "Tvar", "Rozmer", "Výrobca","Cena")
colnames(finalfinal) <- cn
View(finalfinal)
x <- read_vcf("~/signatury/EGA/vqsr/subory/cruk100/cruk100.vqsr.dp.vcf")
View(x)
x@data
x@data
library(RSelenium)
# Start a Selenium server with Chrome driver
driver <- rsDriver(browser = "chrome")
# Check the status of the server
driver$serverStatus
# Start a Selenium server with Chrome driver
driver <- rsDriver(browser = "chrome")
# Start a Selenium server with Chrome driver
driver <- rsDriver(browser = "chrome",port = 4444L)
library(RSelenium)
# Start a Selenium server with Chrome driver
driver <- rsDriver(browser = "chrome",port = 4444L)
# Start a Selenium server with Chrome driver
rD <- rsDriver(browser="firefox", port=4545L, verbose=F)
library(RSelenium)
# Start a Selenium server with Chrome driver
rD <- rsDriver(browser="chrome", port=4444L, verbose=F)
read.csv("/home/pc1/Desktop/chromosome_lengths")
chr <- read.csv("/home/pc1/Desktop/chromosome_lengths")
# kniznice
library(BSgenome.Hsapiens.UCSC.hg38)
library(sigminer)
library(tidyverse)
library(magrittr)
library(pheatmap)
library(kableExtra)
library(gridExtra)
# nastavenie adresara odkial sa budu tahat subory do maf file
setwd("/home/pc1/signatury/EGA/subory/tracerx/pracovny/select/final/")
vcfs <- list.files(".", "*.vcf", full.names = FALSE, recursive = T)
vcfs
# m <- read_maf("signatury/EGA/subory/maf/CRUK0018_BS_GL.maf")  ## toto bude fungovat,ak to budeme robit s maf subormi
# loop na vytvorenie maf file
mtf <- data.frame()
for (i in 1:length(vcfs)) {
m <- read_vcf(vcfs[i], keep_only_pass = FALSE, genome_build = c("hg38")) # opraveny referencny genom
mt_tally <- sig_tally(
m,
ref_genome = "BSgenome.Hsapiens.UCSC.hg38",
use_syn = TRUE,
cores = 16
)
mtf <- rbind(mtf, mt_tally$nmf_matrix)
}
# nastavenie adresara odkial sa budu tahat subory do maf file
setwd("/home/pc1/signatury/EGA/subory/tracerx/pracovny/nomulti/filtered/")
vcfs <- list.files(".", "*.vcf", full.names = FALSE, recursive = T)
# m <- read_maf("signatury/EGA/subory/maf/CRUK0018_BS_GL.maf")  ## toto bude fungovat,ak to budeme robit s maf subormi
# loop na vytvorenie maf file
mtf <- data.frame()
for (i in 1:length(vcfs)) {
m <- read_vcf(vcfs[i], keep_only_pass = FALSE, genome_build = c("hg38")) # opraveny referencny genom
mt_tally <- sig_tally(
m,
ref_genome = "BSgenome.Hsapiens.UCSC.hg38",
use_syn = TRUE,
cores = 16
)
mtf <- rbind(mtf, mt_tally$nmf_matrix)
}
mt_tally$nmf_matrix <- mtf
# refitting signatur na celej vzorke
# signatures <- sig_fit(t(mm[1:37, ]), sig_index = 1:30, return_class = "data.table", rel_threshold = 0.05)
signatures <- sig_fit(t(mt_tally$nmf_matrix), sig_index = 1:30, return_class = "data.table", rel_threshold = 0.05)
signatures %>% kable() %>% kable_styling(bootstrap_options = "striped")
signatures %>% kable() %>% kable_styling(bootstrap_options = "striped") %>% arrange(sample)
write.csv(signatures, file = "~/signatury/EGA/subory/tracerx/pracovny/nomulti/filtered/signatury_vsetky_vcfka.csv")
signatures$sample <- gsub(".filtered", "",signatures$sample)
signatures$sample <- gsub("final_", "", signatures$sample)
# urobi finalnu tabulku aj s totalom na riadkoch a zoradi podla SBS1
cruk0018 <- signatures %>% filter(str_detect(.$sample, "CRUK0018_*")) %>%
arrange(COSMIC_1) %>%
mutate(sample = factor(sample, levels = sample))
signatures$sample
# urobi finalnu tabulku aj s totalom na riadkoch a zoradi podla SBS1
cruk0018 <- signatures %>% filter(str_detect(.$sample, "CRUK0018_*")) %>%
arrange(COSMIC_1) %>%
mutate(sample = factor(sample, levels = sample))
